{"version":3,"sources":["components/StartScene/index.js","constants.js","components/QuizScene/index.js","components/EndScene/index.js","App.js","index.js"],"names":["StartScene","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","handleChange","bind","assertThisInitialized","handleClick","e","value","target","setState","handleStart","bgColor","react_default","a","createElement","className","style","backgroundColor","type","onChange","placeholder","onClick","Component","operators","colors","tips","9","19","29","39","49","59","69","79","89","99","109","119","129","139","149","159","169","179","189","199","QuizScene","operator","number","tip","handleNext","handleQuit","randomize","incrementCounter","window","confirm","confirmQuit","randomOperator","Math","floor","random","randomNumber","counter","_this$state","EndScene","App","started","quit","quitCheck","randomizeColor","objectSpread","localStorage","setItem","JSON","stringify","getItem","_JSON$parse","parse","randColor","component","components_EndScene","components_QuizScene","components_StartScene","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1b9b27f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './styles.scss';\n\nclass StartScene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({ name: value });\n  }\n\n  handleClick() {\n    const { name } = this.state;\n    if (name) {\n      this.props.handleStart({ name });\n    }\n  }\n\n  render() {\n    const { bgColor } = this.props;\n    return (\n      <div className=\"wrapper\" style={{backgroundColor: bgColor }}>\n        <h1>300IQ</h1>\n        <h5>Enter your name to get started. Start at 0 and follow instructions.</h5>\n        <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Enter your name\" />\n        <button onClick={this.handleClick}>Start!</button>\n      </div>\n    );\n  }\n}\n\nexport default StartScene;","export const operators = ['Add', 'Subtract'];\n\nexport const colors = [\n  '#9043CA', \n  '#EF6176', \n  '#F56D44', \n  '#F6D751', \n  '#35A8C0', \n  '#99C953', \n  '#839098', \n  '#5684E3'\n];\n\nexport const tips = {\n  9: 'You\\'re doing great!',\n  19: 'Keep Going...',\n  29: 'Getting There...',\n  39: 'Almost Done...',\n  49: 'Just a few more...',\n  59: 'Math genius over here!',\n  69: 'Home stretch now...',\n  79: 'God amongst men!',\n  89: 'You\\'re making Einstein look bad now',\n  99: 'You need to know something...',\n  109: 'This is never actually ending',\n  119: 'Why are you still going?',\n  129: 'Ready to give up, yet?',\n  139: 'This is all random...',\n  149: 'Nobody is keeping track of the total..',\n  159: 'If you won\\'t stop, we will',\n  169: 'We\\'re leaving...',\n  179: 'This isn\\'t a joke!',\n  189: 'Here we go!',\n  199: 'Bye!'\n};","import React, { Component } from 'react';\nimport { operators, tips } from '../../constants';\n\nclass QuizScene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      operator: '',\n      number: 0,\n      tip: ''\n    };\n\n    this.handleNext = this.handleNext.bind(this);\n    this.handleQuit = this.handleQuit.bind(this);\n  }\n\n  componentDidMount() {\n    this.randomize();\n  }\n\n  handleNext() {\n    this.props.incrementCounter();\n    this.randomize();\n  }\n\n  handleQuit() {\n    const confirmed = window.confirm(\n      'If you quit now, you won\\'t be able to play again. Are you sure you\\'re done?'\n    );\n\n    if (confirmed) {\n      this.props.confirmQuit();\n    }\n  }\n\n  randomize() {\n    const randomOperator = operators[Math.floor(Math.random() * 2)];\n    const randomNumber = Math.floor(Math.random() * 10) + 1;\n\n    this.setState({\n      operator: randomOperator,\n      number: randomNumber,\n      tip: tips[this.props.counter]\n    });\n  }\n\n  render() {\n    const { bgColor } = this.props;\n    const { operator, number, tip} = this.state;\n\n    return (\n      <div className=\"wrapper\" style={ {backgroundColor: bgColor } }>\n        <a className=\"quit-link\" onClick={this.handleQuit}>&times;</a>\n        <h2 className=\"operator\">{ operator }</h2>\n        <h2 className=\"number\">{ number }</h2>\n        <button onClick={this.handleNext}>Next</button>\n        <span className=\"tip\">{ tip }</span>\n      </div>\n    );\n  }\n}\n\nexport default QuizScene;","import React, { Component } from 'react';\nimport './styles.scss';\n\nclass EndScene extends Component {\n  render() {\n    const { bgColor } = this.props;\n\n    return (\n      <div className=\"wrapper\" style={{backgroundColor: bgColor }}>\n        <h2>You quit! Disappointing...</h2>\n        <h4>Name: <span>{ this.props.name }</span></h4>\n        <h4>Counter: <span>{ this.props.counter }</span></h4>\n      </div>\n    );\n  }\n}\n\nexport default EndScene;","import React, { Component } from 'react';\nimport StartScene from './components/StartScene/';\nimport QuizScene from './components/QuizScene/';\nimport EndScene from './components/EndScene/';\nimport { colors } from './constants';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      counter: 1,\n      bgColor: '#282c34',\n      started: false,\n      quit: false\n    };\n\n    this.handleStart = this.handleStart.bind(this);\n    this.handleQuit = this.handleQuit.bind(this);\n    this.incrementCounter = this.incrementCounter.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.quitCheck()) {\n      this.randomizeColor();\n    }\n  }\n\n  handleStart(name) {\n    this.setState({\n      ...name,\n      started: true\n    });\n  }\n\n  incrementCounter () {\n    this.setState({ counter: this.state.counter + 1 });\n  }\n\n  handleQuit() {\n    localStorage.setItem('eq-quit', JSON.stringify({\n      name: this.state.name,\n      counter: this.state.counter\n    }));\n    this.setState({ quit: true });\n  }\n\n  quitCheck() {\n    const quit = localStorage.getItem('eq-quit');\n    if (quit) {\n      const { name, counter } = JSON.parse(quit);\n      this.setState({ name, counter, started: true, quit: true });\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  randomizeColor() {\n    const randColor = colors[Math.floor(Math.random() * 7)]\n    this.setState({ bgColor: randColor });\n  }\n\n  render() {\n    const { bgColor } = this.state;\n    const { started, quit } = this.state;\n    let component;\n\n    if (!started) {\n      component = <StartScene bgColor={this.state.bgColor} handleStart={this.handleStart} />;\n    } else if (quit) {\n      component = <EndScene bgColor={this.state.bgColor} name={this.state.name} counter={this.state.counter}/>;\n    } else {\n      component = <QuizScene bgColor={bgColor} counter={this.state.counter} incrementCounter={this.incrementCounter} confirmQuit={this.handleQuit} />\n    }\n    return (\n      <div className=\"App\">\n        { component }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}